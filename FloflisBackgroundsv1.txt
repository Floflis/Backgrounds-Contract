pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC1155/ERC1155.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract FloflisBackgrounds is ERC1155, Ownable {
    mapping(uint256 => string) private _titles;
    mapping(uint256 => string) private _descriptions;
    mapping(uint256 => string) private _authors;

    constructor() ERC1155("https://example.com/token/{id}.json") {}

    function mint(uint256 tokenId, uint256 amount, string memory title, string memory description, string memory author) public onlyOwner {
        require(bytes(title).length > 0, "Title cannot be empty");
        require(bytes(description).length > 0, "Description cannot be empty");
        require(bytes(author).length > 0, "Author cannot be empty");

        _titles[tokenId] = title;
        _descriptions[tokenId] = description;
        _authors[tokenId] = author;
        _mint(msg.sender, tokenId, amount, "");
    }

    function titleOf(uint256 tokenId) public view returns (string memory) {
        return _titles[tokenId];
    }

    function descriptionOf(uint256 tokenId) public view returns (string memory) {
        return _descriptions[tokenId];
    }

    function authorOf(uint256 tokenId) public view returns (string memory) {
        return _authors[tokenId];
    }
}
